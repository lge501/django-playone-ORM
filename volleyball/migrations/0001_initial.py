# Generated by Django 3.1.3 on 2021-01-18 12:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'Male'), (2, 'Female')], default=1, verbose_name='gender')),
                ('date_of_birth', models.DateField(null=True, verbose_name='date of birth')),
                ('mobile_number', models.CharField(blank=True, help_text='digits and +-() only.', max_length=30, validators=[django.core.validators.RegexValidator('^[0-9+()-]+$', 'Enter a valid mobile number.', 'invalid')], verbose_name='mobile number')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='name')),
                ('address', models.CharField(max_length=256, verbose_name='address')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='photo')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='is public')),
                ('court_detail', models.TextField(blank=True, max_length=300, verbose_name='court detail')),
                ('play_date', models.DateField(verbose_name='play date')),
                ('play_start_time', models.TimeField(verbose_name='play start time')),
                ('is_expired', models.BooleanField(default=False, verbose_name='is expired')),
                ('player_quota', models.PositiveSmallIntegerField(default=6, verbose_name='player quota')),
                ('play_detail', models.TextField(blank=True, max_length=300, verbose_name='play detail')),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volleyball.court', verbose_name='court')),
            ],
            options={
                'ordering': ['play_date', 'play_start_time'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('about', models.TextField(blank=True, max_length=600, verbose_name='about')),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volleyball.court', verbose_name='court')),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volleyball.event')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'organizer'), (1, 'admin'), (2, 'member'), (3, 'pending')], verbose_name='status')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volleyball.group')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(through='volleyball.Membership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='group',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='organizer'),
        ),
        migrations.AddField(
            model_name='event',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='volleyball.group', verbose_name='group'),
        ),
        migrations.AddField(
            model_name='event',
            name='initiator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='initiator'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(related_name='participations', through='volleyball.Participation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='participation',
            constraint=models.UniqueConstraint(fields=('event', 'player'), name='unique_participation'),
        ),
        migrations.AddConstraint(
            model_name='membership',
            constraint=models.UniqueConstraint(fields=('group', 'player'), name='unique_membership'),
        ),
    ]
